将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。
建造者模式是一步一步创建一个复杂的对象;

使用场景：
1、需要生成的对象具有复杂的内部结构。
2、需要生成的对象内部属性本身相互依赖。


注意事项：
与工厂模式的区别是：建造者模式更加关注与零件装配的顺序。


商品详情，就是聚合何种数据的过程，使用的就是建造者模式；


代码例子：
kfc点餐


（抽象）食物类目

（抽象）汉堡
    （具体）素汉堡
    （具体）肉汉堡
（抽象）饮料
    （具体）可口可乐
    （具体）百事可乐
（抽象）包装
    （具体）纸质
    （具体）瓶装

每一项的价格

套餐 = 汉堡+饮料



建造者模式包含如下角色：
Builder：抽象建造者
ConcreteBuilder：具体建造者
Director：指挥者
Product：产品角色


具体怎么构建，要结合实际业务场景来考虑了