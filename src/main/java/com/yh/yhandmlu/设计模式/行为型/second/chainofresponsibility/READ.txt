责任链模式（Chain of Responsibility），又称职责链；

避免请求发送者与请求接受者耦合在一起，让多个对象都有可能接收到请求，
将这些对象连成一条链，直到有对象处理为止；

请求发送者并不清楚，是那个对象处理了本次请求；

在职责链模式里，很多对象由每一个对象对其下家的引用而连接起来形成一条链。


主要解决：
责任链上的处理者负责处理请求，客户只需要将请求发送到职责链上即可，无须关心请求的处理细节和请求的传递，
所以责任链将请求的发送者和请求的处理者解耦了。

优点
1、降低耦合度
2、可简化对象的相互连接
3、增强给对象指派职责的灵活性
4、增加新的请求处理类很方便

缺点
1、不能保证请求一定被接收。
2、系统性能将受到一定影响，而且在进行代码调试时不太方便；可能会造成循环调用。

适用场景：
1、有多个对象可以处理同一个请求，具体哪个对象处理该请求由运行时刻自动确定。
2、在不明确指定接收者的情况下，向多个对象中的一个提交一个请求。
3、可动态指定一组对象处理请求。


模式扩展：

纯与不纯的职责链模式
一个纯的职责链模式要求一个具体处理者对象只能在两个行为中选择一个：
一个是承担责任，另一个是把责任推给下家。
不允许出现某一个具体处理者对象在承担了一部分责任后又将责任向下传的情况。

在一个纯的职责链模式里面，一个请求必须被某一个处理者对象所接收；
在一个不纯的职责链模式里面，一个请求可以最终不被任何接收端对象所接收。

